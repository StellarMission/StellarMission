<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//map grid generator

room_width = (cellWidth/16) * 750
room_height = (cellHite/16) * 750

//set width and height of grid
var width = room_width div cellWidth;
var height = room_height div cellHite;

//generate grid with random cells
mgrid = ds_grid_create(width, height);
//ds_grid_set_region(mgrid, 0,0, width-1, height-1, DIRT);
var i, j;
i = 0;
j = 0;
randomize();
//add Camera "player"
var px = width div 2;
var py = height div 2;

instance_create(px*cellWidth, py*cellHite, cam_obj);

//generate map
repeat (ds_grid_width(mgrid)){
     {
        repeat(ds_grid_height(mgrid)){
        ds_grid_set(mgrid, i, j, irandom(3));
        j +=1;
        }
        j = 0;
        i += 1;


}

for (var vy = 0; vy &lt; height; vy++){
    for (var vx = 0; vx &lt; width; vx++){
        if(mgrid[# vx, vy, ] == 0){
            tile_add(bgDirt, 0, 0, cellWidth, cellHite, vx*cellWidth, vy*cellHite, 0);
        } else if (mgrid[# vx, vy] == 1) {
            tile_add(bgRocks, 0, 0, cellWidth, cellHite, vx*cellWidth, vy*cellHite, 0);
        } else if (mgrid[# vx, vy] == 2) {
        tile_add(bgTrees, 0, 0, cellWidth, cellHite, vx*cellWidth, vy*cellHite, 0);
        }else if (mgrid[# vx, vy] == 3) {
        tile_add(bgObstacle, 0, 0, cellWidth, cellHite, vx*cellWidth, vy*cellHite, 0);
        }
    }
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="96">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
